﻿﻿﻿@using BusinessObjects.Models﻿
@model FUNewsManagementSystem.Helpers.PaginatedList<Category>

@{
    ViewData["Title"] = "Quản lý danh mục";
}
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css">

<div class="table-container fade-in">
    <h1 class="page-title">Quản lý danh mục</h1>

    <div class="actions-container">
        <div class="search-box">
            <form asp-action="Index" method="get" class="search-form">
                <div class="input-group">
                    <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" class="form-control search-input" placeholder="Tìm kiếm danh mục..." />
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-search"></i>
                    </button>
                    @if (!string.IsNullOrEmpty(ViewData["CurrentFilter"]?.ToString()))
                    {
                        <a asp-action="Index" class="btn btn-secondary">
                            <i class="fas fa-times"></i>
                        </a>
                    }
                </div>
            </form>
        </div>
        
        <a asp-action="Create" class="create-btn">
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
            </svg>
            Tạo danh mục mới
        </a>
    </div>

    @if (!Model.Any())
    {
        <div class="table-empty">
            <p>Không tìm thấy danh mục nào. Hãy tạo danh mục mới để bắt đầu.</p>
        </div>
    }
    else
    {
        <div class="table-responsive">
            <table class="table table-striped custom-table">
                <thead>
                    <tr>
                        <th class="py-3 px-4">
                            <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]" class="sort-link">
                                Tên danh mục
                                <i class="fas @(ViewData["CurrentSort"]?.ToString() == "name_desc" ? "fa-sort-down" : 
                                              ViewData["CurrentSort"]?.ToString() == "" ? "fa-sort-up" : "fa-sort")"></i>
                            </a>
                        </th>
                        <th class="py-3 px-4">
                            <a asp-action="Index" asp-route-sortOrder="@ViewData["DescriptionSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]" class="sort-link">
                                Mô tả
                                <i class="fas @(ViewData["CurrentSort"]?.ToString() == "Description" ? "fa-sort-up" : 
                                              ViewData["CurrentSort"]?.ToString() == "description_desc" ? "fa-sort-down" : "fa-sort")"></i>
                            </a>
                        </th>
                        <th class="py-3 px-4">
                            <a asp-action="Index" asp-route-sortOrder="@ViewData["StatusSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]" class="sort-link">
                                Trạng thái
                                <i class="fas @(ViewData["CurrentSort"]?.ToString() == "Status" ? "fa-sort-up" : 
                                              ViewData["CurrentSort"]?.ToString() == "status_desc" ? "fa-sort-down" : "fa-sort")"></i>
                            </a>
                        </th>
                        <th class="py-3 px-4">Danh mục cha</th>
                        <th class="py-3 px-4">Thao tác</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td class="py-3 px-4">@Html.DisplayFor(modelItem => item.CategoryName)</td>
                            <td class="py-3 px-4">@Html.DisplayFor(modelItem => item.CategoryDesciption)</td>
                            <td class="py-3 px-4">
                                <span class="status-badge @(item.IsActive ?? false ? "status-active" : "status-inactive")">
                                    @(item.IsActive ?? false ? "Hoạt động" : "Ngừng hoạt động")
                                </span>
                            </td>
                            <td class="py-3 px-4">
                                @Html.DisplayFor(modelItem => item.ParentCategory.CategoryName)
                            </td>
                            <td class="py-3 px-4">
                                <div class="d-flex gap-2">
                                    <a asp-action="Edit" asp-route-id="@item.CategoryId" class="btn-custom btn-edit">
                                        <i class="fas fa-edit"></i>
                                        Sửa
                                    </a>
                                    <a asp-action="Details" asp-route-id="@item.CategoryId" class="btn-custom btn-details">
                                        <i class="fas fa-info-circle"></i>
                                        Chi tiết
                                    </a>
                                    <a asp-action="Delete" asp-route-id="@item.CategoryId" class="btn-custom btn-delete">
                                        <i class="fas fa-trash"></i>
                                        Xóa
                                    </a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div class="pagination-container">
            @{
                var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
                var nextDisabled = !Model.HasNextPage ? "disabled" : "";
            }
            <nav aria-label="Page navigation">
                <ul class="pagination justify-content-center align-items-center">
                    <li class="page-item @prevDisabled">
                        <a class="page-link" asp-action="Index"
                           asp-route-sortOrder="@ViewData["CurrentSort"]"
                           asp-route-pageNumber="@(Model.PageIndex - 1)"
                           asp-route-currentFilter="@ViewData["CurrentFilter"]">
                            <i class="fas fa-chevron-left"></i>
                        </a>
                    </li>
                    <li class="page-item">
                        <span class="page-link">
                            Trang @Model.PageIndex / @Model.TotalPages
                        </span>
                    </li>
                    <li class="page-item @nextDisabled">
                        <a class="page-link" asp-action="Index"
                           asp-route-sortOrder="@ViewData["CurrentSort"]"
                           asp-route-pageNumber="@(Model.PageIndex + 1)"
                           asp-route-currentFilter="@ViewData["CurrentFilter"]">
                            <i class="fas fa-chevron-right"></i>
                        </a>
                    </li>
                    <li class="page-item ms-2">
                        <div class="d-flex align-items-center goto-page-container">
                            <input type="number" 
                                   id="gotoPage" 
                                   class="form-control goto-page-input" 
                                   min="1" 
                                   max="@Model.TotalPages" 
                                   placeholder="Trang..." />
                            <button onclick="gotoPage('@ViewData["CurrentSort"]', '@ViewData["CurrentFilter"]')" 
                                    class="btn btn-primary goto-page-button">
                                <i class="fas fa-arrow-right"></i>
                            </button>
                        </div>
                    </li>
                </ul>
            </nav>
        </div>
    }
</div>

<style>
    :root {
        --primary-color: #4f46e5;
        --secondary-color: #6366f1;
        --success-color: #22c55e;
        --info-color: #3b82f6;
        --danger-color: #ef4444;
        --background-color: #f9fafb;
    }

    body {
        background-color: var(--background-color);
        font-family: 'Inter', sans-serif;
    }

    .table-container {
        max-width: 1200px;
        margin: 2rem auto;
        padding: 2rem;
        background: white;
        border-radius: 16px;
        box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1);
    }

    .actions-container {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 2rem;
        gap: 1rem;
        flex-wrap: wrap;
    }

    .search-box {
        flex-grow: 1;
        max-width: 500px;
    }

    .search-form {
        margin: 0;
    }

    .search-input {
        border-radius: 8px;
        border: 1px solid #e5e7eb;
        padding: 0.5rem 1rem;
    }

    .sort-link {
        color: inherit;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
    }

        .sort-link:hover {
            color: var(--primary-color);
        }

    .page-title {
        color: #1f2937;
        font-size: 2rem;
        font-weight: 600;
        margin-bottom: 2rem;
        position: relative;
        padding-bottom: 0.5rem;
    }

        .page-title::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 60px;
            height: 4px;
            background: var(--primary-color);
            border-radius: 2px;
        }

    .create-btn {
        background: var(--primary-color);
        color: white;
        padding: 0.75rem 1.5rem;
        border-radius: 8px;
        font-weight: 500;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        transition: all 0.3s ease;
        text-decoration: none;
    }

        .create-btn:hover {
            background: var(--secondary-color);
            color: white;
            transform: translateY(-1px);
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
        }

    .custom-table {
        border-radius: 12px;
        overflow: hidden;
        border: 1px solid #e5e7eb;
    }

        .custom-table thead {
            background: var(--primary-color);
            color: white;
        }

        .custom-table th {
            font-weight: 500;
            text-transform: uppercase;
            font-size: 0.875rem;
            letter-spacing: 0.05em;
        }

        .custom-table tbody tr {
            transition: all 0.3s ease;
        }

            .custom-table tbody tr:hover {
                background-color: #f3f4f6;
                transform: translateY(-1px);
            }

    .btn-custom {
        padding: 0.5rem 1rem;
        border-radius: 6px;
        font-weight: 500;
        transition: all 0.3s ease;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 0.25rem;
    }

    .btn-edit {
        background: var(--success-color);
        color: white;
    }

    .btn-details {
        background: var(--info-color);
        color: white;
    }

    .btn-delete {
        background: var(--danger-color);
        color: white;
    }

    .btn-custom:hover {
        transform: translateY(-1px);
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
        color: white;
        opacity: 0.9;
    }

    .status-badge {
        padding: 0.25rem 0.75rem;
        border-radius: 9999px;
        font-size: 0.875rem;
        font-weight: 500;
    }

    .status-active {
        background: #dcfce7;
        color: #166534;
    }

    .status-inactive {
        background: #fee2e2;
        color: #991b1b;
    }

    .table-empty {
        text-align: center;
        padding: 3rem;
        color: #6b7280;
    }

    .pagination-container {
        margin-top: 2rem;
    }

    .page-link {
        color: var(--primary-color);
        border-color: #e5e7eb;
        padding: 0.5rem 1rem;
    }

        .page-link:hover:not(.disabled) {
            background-color: var(--primary-color);
            color: white;
            border-color: var(--primary-color);
        }

    .page-item.disabled .page-link {
        color: #6c757d;
        pointer-events: none;
        background-color: #e9ecef;
        border-color: #dee2e6;
    }

    /* Goto page styles */
    .goto-page-container {
        gap: 0.5rem;
    }

    .goto-page-input {
        width: 80px;
        text-align: center;
        border-radius: 6px;
        border: 1px solid #e5e7eb;
        padding: 0.4rem;
    }

    .goto-page-input:focus {
        border-color: var(--primary-color);
        box-shadow: 0 0 0 2px rgba(79, 70, 229, 0.1);
    }

    .goto-page-button {
        padding: 0.4rem 0.8rem;
        border-radius: 6px;
        transition: all 0.3s ease;
    }

    .goto-page-button:hover {
        transform: translateY(-1px);
        box-shadow: 0 2px 4px -1px rgba(0, 0, 0, 0.1);
    }

    /* Animation classes */
    .fade-in {
        animation: fadeIn 0.5s ease-in;
    }

    @@media (max-width: 768px) {
        .actions-container {
            flex-direction: column;
        }

        .search-box {
            width: 100%;
            max-width: none;
            order: 2;
        }

        .create-btn {
            width: 100%;
            justify-content: center;
            order: 1;
        }
    }
</style>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
<script>
    function gotoPage(sortOrder, currentFilter) {
        const pageInput = document.getElementById('gotoPage');
        const pageNumber = parseInt(pageInput.value);
        const maxPage = parseInt(pageInput.getAttribute('max'));
        
        if (pageNumber && pageNumber > 0 && pageNumber <= maxPage) {
            const url = new URL(window.location.href);
            url.searchParams.set('pageNumber', pageNumber);
            
            if (sortOrder) {
                url.searchParams.set('sortOrder', sortOrder);
            }
            
            if (currentFilter) {
                url.searchParams.set('currentFilter', currentFilter);
            }
            
            window.location.href = url.toString();
        } else {
            alert('Vui lòng nhập số trang hợp lệ từ 1 đến ' + maxPage);
        }
    }

    // Handle Enter key press
    document.getElementById('gotoPage').addEventListener('keypress', function(e) {
        if (e.key === 'Enter') {
            e.preventDefault();
            const sortOrder = '@ViewData["CurrentSort"]';
            const currentFilter = '@ViewData["CurrentFilter"]';
            gotoPage(sortOrder, currentFilter);
        }
    });
</script>
